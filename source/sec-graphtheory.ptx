<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-graphtheory" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Connecting Dots</title>

  <figure> <!-- source: geogebra -->
    <image xml:id="fig-graphs" source="graphs-graphHeader.png" width="90%" />
  </figure>
 

  <p>Jane and her friend Julia were invited to a small get together at their
    friend Julio's place. When they arrive, they don't really know any of the other
  four people (other than Julio) who seem to know each other EXCEPT one of the four coincidentally
  is Jane's cousin, Elaine.  </p>

  <figure> <!-- source: geogebra -->
    <image xml:id="fig-graphs-party" source="graphs-party.png" width="60%" />
    <caption>Julio's party</caption>
  </figure>

  <p>
    This type situations happen all of the time. If you're sitting in a classroom, you're in a
    similar situation right now. When you are with a group of people, you are a part of a mathematical structure known as a <term>graph</term>.
    Actually, any network (relationships, pipe systems, road maps, the internet, ...) can be represented as a graph.
  </p>

  <figure> <!-- source: geogebra -->
    <image xml:id="fig-graphs-graphs" source="graphs-connectivity.png" width="90%" />
    <caption>Various graphs</caption>
  </figure>

  <p>
    We see graphs anytime we have a collection of items (We call them <term>vertices </term> or <term>nodes</term>.) and relationships
    between those items (We call the relationships <term>edges</term>.). 
    In fact, it is by the vertices and edges that we define a graph.
  </p>

  <definition xml:id="def-graph">
    <statement>
      <p>
      A graph <term>G</term> is a pair of two sets <m>V</m> and <m>E</m>, 
      where <m>V</m> is the set of vertices and <m>E</m> is the set of edges on <m>G</m>.
      </p>
    </statement>
  </definition>

  <p>
    
  </p>

  <question xml:id="ques-graphs1">
    <term>Drawing a Graph</term> 
    <statement>
      <p>
        Draw the graph with vertex set <m>V = \{a,b,c,d,e,f,g,h\}</m> and
        edge set <m>E = \{ab, ac, ad, cd, de, eg, eh, fb, fc, hc\}</m>.
      </p>
    </statement>   
  </question>

  <p>
    Graph theorists study all sort aspects of graphs. We ask questions about the longest 
    path of a graph, how easy is it to break up a graph with vertex or edge deletions, and if we can
    draw a graph in the plane without crossing any edges (among many others).
  </p>

  <p>
    We'll explore a few interesting graph theory questions here.
  </p>

  <subsection xml:id="subsec-konigsburg">
    <title>Touring the City of Königsburg</title>
   
    <figure> <!-- source: KONIGSBUG PIC: By Bogdan Giuşcă - Public domain (PD),based on the image, CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=112920 -->
      <image xml:id="fig-konigsburg" source="konigsberg.png" width="90%" />
    </figure>

    <p>
      If we happen to find ourselves in Königsburg Prussia in the 18th century, we would see a city layout similar to the one
      in <xref ref="fig-konigsburg"/>. The Pregel river flowed through the middle of the city forming two
      islands. The part we care about, though, is the seven highlighted bridges.
    </p>

    <p>
      Residents such as ourselves, as a game, would often attempt to tour the city with these rules: 
      <ol>
        <li>
          <p>
            You must cross each bridge (all 7) exactly one time (no more and no less).
          </p>
        </li>
        <li>
          <p>
            You must end your tour exactly where you began.
          </p>
        </li>
      </ol>
      A tour that meets these requirements will be called a successful tour.
    </p>

    <activity>
      <statement>
        <p>
          Can you find a successful tour of Königsburg?
        </p>
      </statement>
    </activity>

    <p>
      This game peaked the interest of the incredibly brilliant mathematician, Leonhard Euler (1707-1783), and to 
      solve this question Euler introduced the field of graph theory to the world. The Königsburg bridge problem is considered
      the to be the first instance graph theory historically. Like Euler, we can picture Königsburg as a graph
      by treating the bridges as edges and use vertices to represent each land mass. 
       </p>

     <question xml:id="q-konigsburg">
      <statement>
        <p>
          Represent Königsburg with a graph.
        </p>
      </statement>
      <solution>
        <p>
          <figure> <!-- source: geogebra -->
            <image xml:id="fig-graphs-konigs" source="graphs-konigsberg.png" width="70%" />
          </figure>
      
        </p>
      </solution>
      
     </question> 
     
     <p>
      What do we mean by a "tour" on a graph? First, two edges are <term>incident</term> if they 
      share a vertex. We can say a <term>tour</term> is a sequence of incident edges. We want to find
      a tour that begins and ends with the same vertex. This type of tour is called an <term>eulerian circuit</term>.
     </p>

    <!--<p>
      Euler's brilliance showed that by recognizing the only information needed for this problem was a marker for each piece of land
      and a way to their connections (the bridges), we can avoid being distracted by unnecessary information. We did not care about the 
      distance travelled, the water, etc. In fact, with Euler's strategy, we know exactly when, for any graph, you can find an eulerian circuit.
    </p>-->

    <p>
      Let's take a tour on our new Königsburg graph, and each time we visit and each time we leave a vertex, we will give that vertex a point. For
      example, if we start at vertex <m>v_1</m> and travel to <m>v_3</m> and then to <m>v_4</m>, then <m>v_1</m> and <m>v_4</m> have 
      1 point each while <m>v_3</m> has 2 points.
    </p>

    <figure> <!-- source: geogebra -->
      <image xml:id="fig-graphs-konigscolor" source="graphs-konigsbergColor.png" width="70%" />
    </figure>

    <p>
      As we keep touring through our graph, the points of a vertex tells us how many edges touching 
      that vertex are a part of our tour.
    </p>

    <question xml:id="q-konigs2">
      <title>One-point vertices</title>
      <statement>
        <p>
          How can the vertex <m>v</m> have 1 point?
        </p>
      </statement>
      <solution>
        <p>
          Either <m>v</m> is the beginning or ending of our tour (and not both).
        </p>
      </solution>
      
    </question>

    <question xml:id="q-konigs3">
      <title>Odd Points</title>      
      <statement>
        <p>
          How can the vertex <m>v</m> have an odd number of points?
        </p>
      </statement>
      <solution>
        <p>
          Our tour is currently resting at <m>v</m>, and <m>v</m> is not the first and last vertex of the tour. If the point value is more than 1, then
          the tour has already arrived and left <m>v</m> at least once.
        </p>
      </solution>
      
    </question>

    <question xml:id="q-konigs4">
      <title>Even Points</title>
      <statement>
        <p>
          How can the vertex <m>v</m> have an even number of points?
        </p>
      </statement>
      <solution>
        <p>
          Our tour is resting at <m>v</m>. If the point value is more than 1, then
          the tour has already arrived and left <m>v</m> at least once.
        </p>
      </solution>
      
    </question>

    <p>
      From questions <xref ref="q-konigs2"/>, <xref ref="q-konigs3"/>, and <xref ref="q-konigs4"/>, we see that
      a vertex will only have an odd number of points (or adjacent to an odd number of edges in our tour) if that
      vertex either starts or ends the tour... unless the tour ends where it started.
    </p>

    <p>
      Remember that an eulerian circuit passes through EVERY edge and ends where it started. So can a vertex in
      an eulerian circuit have an odd number of points? No. So if a graph has an eulerian circuit, then every vertex
      is adjacent to an even number of vertices. We just drew up a sketch of a proof for the following theorem.
    </p>

    <theorem xml:id="thm-eulercircuit">
      <statement>
        <p>
          A graph <m>G</m> has an eulerian circuit if and only if it has no vertex adjacent
          to an odd number of edges.
        </p>
      </statement>
    </theorem>

    <p>
      We finally see what Euler saw.
    </p>

    <question xml:id="q-kongigs6">
      <statement>
        <p>
          So why does the Königsberg graph not have an eulerian circuit?
        </p>
      </statement>
      <solution>
        <p>
          The Königsberg graph has several vertices adjacent to an odd number of edges.
        </p>
      </solution>
      
    </question>
   
  </subsection>

  <subsection xml:id="subsec-connectivity">
    <title>Connectivity</title>

    <p>
      Let's look again at the graphs in <xref ref="fig-graphs-graphs"/>. This time we want to break down
      our graphs by deleting vertices. In particular, we want to know how many vertices we have to delete
      in order to break the graph into pieces.
    </p>

    <figure> <!-- source: geogebra -->
      <image xml:id="fig-graphs-graphs2" source="graphs-connectivity.png" width="90%" />
    </figure>

    <p>
      For example, if we delete one vertex from the first graph in <xref ref="fig-graphs-graphs2"/> (the edges
      adjacent to that vertex are also deleted), does our graph break into two separate pieces? No. It'll take more than
      one vertex, but it can be done with two vertices! In <xref ref="fig-graphs-deleted"/>, we deleted two vertices 
      (indicated by the red open circles), and now the graph is broken up. We say it is <term>disconnected</term>.
    </p>

    <figure> <!-- source: geogebra -->
      <image xml:id="fig-graphs-deleted" source="graphs-deleted.png" width="50%" />
    </figure>

    <p>
      There's a lot we could say about this situation. The two vertices we deleted are a <term>cut set</term>
      of the graph, and the pieces are called <term>components</term>. After we delete our cut set, if <m>u</m> is in one component and 
      <m>v</m> is another component, then our cut set is a <term><m>u-v</m> separating set</term>. In this graph, our
      cut set had two vertices, so we say the graph is <m>2</m>-connected.
    </p>

    <definition xml:id="def-connectivity">
      <statement>
        <p>
          In general, the graph <m>G</m> is <m>k</m>-connected if <m>G</m> has a cut set of <m>k</m> vertices.
        </p>
      </statement>
    </definition>

    <p>
      So how connected are the graphs in <xref ref="fig-graphs-graphs2"/>?
    </p>

    <question xml:id="q-connectivity1">
      <statement>
        <p>
          For each graph <m>G</m> in <xref ref="fig-graphs-graphs2"/>, what is the smallest value of <m>k</m>
          such that <m>G</m> is <m>k</m>-connected?
        </p>
      </statement>
      <solution>
        <p>
          The graph on the farthest left is <m>2</m>-connected.
        </p>
      </solution>
      
    </question>

    <p>
      Knowing how connected a graph is can tell us other things as well. For example,
    </p>

    <theorem xml:id="thm-kconnectedresult">
      <statement>
        <p>
          If <m>G</m> is a <m>k</m>-connected graph, <m>k \geq 2</m>, then every <m>k</m> vertices of
          <m>G</m> lie on a common cycle of <m>G</m>.
        </p>
      </statement>
    </theorem>

    <p>
      Connectivity and cycles do not seem to be immediately related, but graph theorists have 
      discovered that they are related concepts.
    </p>
    
    
  </subsection>

  <subsection xml:id="subsec-mengers">
    <title>Different Paths</title>

  <p>
    Let's play one more walking game. This time we'll look at <term>paths</term> in a graph. A
    path is like a tour except now vertices can be revisted. So a <term>path</term> is a tour
    with unique vertices and edges.
  </p>

  <figure> <!-- source: geogebra -->
    <image xml:id="fig-graphs-xypath" source="graphs-xypath.png" width="50%" />
  </figure>

  <activity xml:id="a-paths1">
    <p>
      From <xref ref="fig-graphs-xypath"/>, can you find a path starting at <m>v_1</m> and ending at <m>v_5</m>? Can you
      find more than one?
      </p>

      <p>
        Try this: after finding a <m>v_1</m>-<m>v_5</m> path, delete the vertices of the path from the graph (but not <m>v_1</m> and <m>v_5</m>). Then try to find another
        <m>v_1</m>-<m>v_5</m> path and deleting those vertices as well. Repeat this process as much as possible. How many <m>v_1-v_5</m> paths
        can you find in this way?
      </p>
  </activity>

  <p>
    The paths you found in <xref ref="a-paths1"/> are called <term>internally disjoint paths</term> since they have no vertices in common other than their
    endpoints. Did you find four internally disjoint paths in the graph in <xref ref="fig-graphs-xypath"/>? Good. For a graph <m>G</m> with nonadjacent vertices
    <m>x</m> and <m>y</m>, is there a way we could count the number of <m>x</m>-<m>y</m> internally disjoint paths in <m>G</m>?
  </p>

  <p>
  In <xref ref="a-paths1"/>, when we found our first <m>v_1</m>-<m>v_5</m> path, we deleted the internal vertices.   
  </p>

  <question xml:id="q-mengers1">
    <statement>
      <p>
        After deleting those internal vertices, was the graph still connected?
      </p>
    </statement>
    <solution>
      <p>
        No. If the graph was disconnected, then there would no more paths to find.
      </p>
    </solution>
    
  </question>

  <question xml:id="q-mengers2">
    <statement>
      <p>
        How many paths do we need to delete in order to separate <m>v_1</m> and <m>v_5</m>?
      </p>
    </statement>
    <solution>
      <p>
        All four of them! Coincidence?
      </p>
    </solution>
    
  </question>

  <p>
    Does this give us some sort of link between <m>x</m>-<m>y</m> separating sets and the number of internally disjoint
    <m>x</m>-<m>y</m> paths?
  </p>

  <question xml:id="q-mengers3">
    <statement>
      <p>
        What is the size of the smallest <m>v_1</m>-<m>v_5</m> separating set in the graph in 
        <xref ref="fig-graphs-xypath"/>?
      </p>
    </statement> 
    <solution>
      <p>
        We need to delete four vertices. Note that <m>\{v_2, v_3, v_7, v_8\} </m> is a <m>v_1</m>-<m>v_5</m> separating set.
      </p>
    </solution>
    
  </question>

  <p>
    Woah. So we had four internally disjoint paths and a separating set cardinality four. This is not a coincidence. Let's take graph <m>G</m>
    with nonadjacent vertices <m>x</m> and <m>y</m>, and let's call the 
    number of internally <m>x</m>-<m>y</m> paths <m>p(x,y)</m>. Let's also let <m>c(x,y)</m> be the cardinality of a smallest
    <m>x</m>-<m>y</m> separating set. Now we can show they are related.
  </p>

  <theorem xml:id="thm-mengers">
    <title>Menger's Theorem</title>    
    <statement>
      <p>
        Let <m>G</m> be a graph with nonadjacent vertices <m>x</m> and <m>y</m>. Then <m>p(x,y) = c(x,y)</m>.
      </p>
    </statement>
  </theorem>
   
    
  </subsection>

</section>